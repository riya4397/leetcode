/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public List<Integer> postorder(Node root) {
        
        LinkedList<Integer> arr = new LinkedList<>();
        LinkedList<Node> stack = new LinkedList<>();
        if(root == null)return arr;
        stack.add(root);
        
        while(stack.size() > 0){
            Node temp = stack.removeFirst();
            arr.addFirst(temp.val);
            for(int i = 0; i < temp.children.size(); i++){
                stack.addFirst(temp.children.get(i));
            }
        }
        return arr;
    }
}
