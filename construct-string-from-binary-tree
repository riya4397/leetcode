/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void inorder(TreeNode r, List<Integer> l){
        if(r == null)return;
        inorder(r.left, l);
        l.add(r.val);
        inorder(r.right, l);
    }
    public int getMinimumDifference(TreeNode root) {
        List<Integer> x = new LinkedList<>();
        inorder(root, x);
        int amt = Integer.MAX_VALUE;
        for(int i = 0; i < x.size()-1; i++){
            int temp = x.get(i+1) - x.get(i);
            if(temp < amt)amt = temp;
        }
        return amt;
    }
}
