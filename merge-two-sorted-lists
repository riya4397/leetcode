/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode head = new ListNode(0);
        ListNode h1 = head;
        
        while(true){
            ListNode temp = null;
            if(l1 == null && l2 == null)break;
            else if(l1 == null && l2 != null){
                temp = l2;
                l2 = l2.next;
            }
            else if(l1 != null && l2 == null){
                temp = l1;
                l1 = l1.next;
            }
            else if(l1.val < l2.val){
                temp = l1;
                l1 = l1.next;
            }
            else if (l1.val == l2.val){
                temp = l1;
                l1 = l1.next;
            }
            else{
                temp = l2;
                l2 = l2.next;
            }
            temp.next = null;
            h1.next = temp;   
            h1 = h1.next;
        }
        return head.next;
    }
}
