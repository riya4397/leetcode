/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void inOrder(TreeNode root, List<Integer> l){
        if(root == null)return;
        inOrder(root.left, l);
        l.add(root.val);
        inOrder(root.right, l);
    }
    
    public boolean findTarget(TreeNode root, int k) {
        List<Integer> l = new LinkedList<>();
        inOrder(root, l);
        if(l.size() <= 1)return false;
        int p1 = 0; int p2 = l.size()-1;
        if(l.get(p2-1)+l.get(p2) < k)return false;
        while(p1 < p2){
            if((l.get(p1)+l.get(p2)) == k)return true;
            if((l.get(p1)+l.get(p2)) < k)p1++;
            if((l.get(p1)+l.get(p2)) > k)p2--;
        }
        return false;
    }
}
