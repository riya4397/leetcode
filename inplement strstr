class Solution {
    public int strStr(String haystack, String needle) {
        if(needle.length() == 0 && haystack.length() == 0)return 0;
        if(haystack.length() != 0 && needle.length() == 0)return 0;
        if(haystack.length() == 0 && needle.length() != 0)return -1;
        List<Integer> startIndex = new ArrayList<>();
        
        for(int i = 0; i < haystack.length(); i++){           
            if(haystack.charAt(i) == needle.charAt(0))
            startIndex.add(i);
        }
        
outer: for(int i = 0; i < startIndex.size(); i++){
            int pos = startIndex.get(i);
            for(int j = 1; j < needle.length(); j++){
                if(pos+j >= haystack.length()) continue outer;
                if(haystack.charAt(pos+j) != needle.charAt(j))continue outer;
            }
            return pos;
        }
        return -1;
    }
}
